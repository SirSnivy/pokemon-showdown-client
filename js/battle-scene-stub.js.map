{"version":3,"sources":["../src/battle-scene-stub.ts"],"names":["BattleSceneStub","animating","acceleration","NaN","gen","activeCount","numericId","timeOffset","interruptionCount","messagebarOpen","log","add","args","kwargs","abilityActivateAnim","pokemon","result","addPokemonSprite","addSideCondition","siden","id","instant","animationOff","animationOn","maybeCloseMessagebar","kwArgs","closeMessagebar","damageAnim","damage","destroy","finishAnimations","healAnim","hideJoinButtons","incrementTurn","updateAcceleration","message","hiddenMessage","pause","setMute","muted","preemptCatchup","removeSideCondition","reset","resetBgm","updateBgm","resultAnim","type","typeAnim","types","resume","runMoveAnim","moveid","participants","runOtherAnim","runPrepareAnim","attacker","defender","runResidualAnim","runStatusAnim","startAnimations","teamPreview","resetSides","updateGen","updateSidebar","side","updateSidebars","updateStatbars","updateWeather","upkeepWeather","wait","time","setFrameHTML","html","setControlsHTML","removeEffect","addEffect","animSummon","slot","animUnsummon","animDragIn","animDragOut","updateStatbar","updatePrevhp","updateHp","updateStatbarIfExists","animTransform","isCustomAnim","isPermanent","clearEffects","removeTransform","animFaint","animReset","anim","end","transition","beforeMove","afterMove","require","global"],"mappings":"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","sourcesContent":["import type {Pokemon, Side} from './battle';\r\nimport type {ScenePos, PokemonSprite} from './battle-animations';\r\nimport type {BattleLog} from './battle-log';\r\n\r\nexport class BattleSceneStub {\r\n\tanimating: boolean = false;\r\n\tacceleration: number = NaN;\r\n\tgen: number = NaN;\r\n\tactiveCount: number = NaN;\r\n\tnumericId: number = NaN;\r\n\ttimeOffset: number = NaN;\r\n\tinterruptionCount: number = NaN;\r\n\tmessagebarOpen: boolean = false;\r\n\tlog: BattleLog = {add: (args: Args, kwargs?: KWArgs) => {}} as any;\r\n\r\n\tabilityActivateAnim(pokemon: Pokemon, result: string): void { }\r\n\taddPokemonSprite(pokemon: Pokemon): PokemonSprite { return null!; }\r\n\taddSideCondition(siden: number, id: ID, instant?: boolean | undefined): void { }\r\n\tanimationOff(): void { }\r\n\tanimationOn(): void { }\r\n\tmaybeCloseMessagebar(args: Args, kwArgs: KWArgs): boolean { return false; }\r\n\tcloseMessagebar(): boolean { return false; }\r\n\tdamageAnim(pokemon: Pokemon, damage: string | number): void { }\r\n\tdestroy(): void { }\r\n\tfinishAnimations(): JQuery.Promise<JQuery<HTMLElement>, any, any> | undefined { return void(0); }\r\n\thealAnim(pokemon: Pokemon, damage: string | number): void { }\r\n\thideJoinButtons(): void { }\r\n\tincrementTurn(): void { }\r\n\tupdateAcceleration(): void { }\r\n\tmessage(message: string, hiddenMessage?: string | undefined): void { }\r\n\tpause(): void { }\r\n\tsetMute(muted: boolean): void { }\r\n\tpreemptCatchup(): void { }\r\n\tremoveSideCondition(siden: number, id: ID): void { }\r\n\treset(): void { }\r\n\tresetBgm(): void { }\r\n\tupdateBgm(): void { }\r\n\tresultAnim(\r\n\t\tpokemon: Pokemon, result: string, type: \"bad\" | \"good\" | \"neutral\" | \"par\" | \"psn\" | \"frz\" | \"slp\" | \"brn\"\r\n\t): void { }\r\n\ttypeAnim(pokemon: Pokemon, types: string): void { }\r\n\tresume(): void { }\r\n\trunMoveAnim(moveid: ID, participants: Pokemon[]): void { }\r\n\trunOtherAnim(moveid: ID, participants: Pokemon[]): void { }\r\n\trunPrepareAnim(moveid: ID, attacker: Pokemon, defender: Pokemon): void { }\r\n\trunResidualAnim(moveid: ID, pokemon: Pokemon): void { }\r\n\trunStatusAnim(moveid: ID, participants: Pokemon[]): void { }\r\n\tstartAnimations(): void { }\r\n\tteamPreview(): void { }\r\n\tresetSides(): void { }\r\n\tupdateGen(): void { }\r\n\tupdateSidebar(side: Side): void { }\r\n\tupdateSidebars(): void { }\r\n\tupdateStatbars(): void { }\r\n\tupdateWeather(instant?: boolean | undefined): void { }\r\n\tupkeepWeather(): void { }\r\n\twait(time: number): void { }\r\n\tsetFrameHTML(html: any): void { }\r\n\tsetControlsHTML(html: any): void { }\r\n\tremoveEffect(pokemon: Pokemon, id: ID, instant?: boolean) { }\r\n\taddEffect(pokemon: Pokemon, id: ID, instant?: boolean) { }\r\n\tanimSummon(pokemon: Pokemon, slot: number, instant?: boolean) { }\r\n\tanimUnsummon(pokemon: Pokemon, instant?: boolean) { }\r\n\tanimDragIn(pokemon: Pokemon, slot: number) { }\r\n\tanimDragOut(pokemon: Pokemon) { }\r\n\tupdateStatbar(pokemon: Pokemon, updatePrevhp?: boolean, updateHp?: boolean) { }\r\n\tupdateStatbarIfExists(pokemon: Pokemon, updatePrevhp?: boolean, updateHp?: boolean) { }\r\n\tanimTransform(pokemon: Pokemon, isCustomAnim?: boolean, isPermanent?: boolean) { }\r\n\tclearEffects(pokemon: Pokemon) { }\r\n\tremoveTransform(pokemon: Pokemon) { }\r\n\tanimFaint(pokemon: Pokemon) { }\r\n\tanimReset(pokemon: Pokemon) { }\r\n\tanim(pokemon: Pokemon, end: ScenePos, transition?: string) { }\r\n\tbeforeMove(pokemon: Pokemon) { }\r\n\tafterMove(pokemon: Pokemon) { }\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).BattleSceneStub = BattleSceneStub;\r\n}\r\n"],"file":"battle-scene-stub.js"}